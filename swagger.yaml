paths:
  # /api/auth/signup:
  #   post:
  #     description: welcome in to Groupomania
  #     summary: creation of an account
  #     tags:
  #       - Authentification
  #     parameters:
  #       - in: body
  #         name:
  #           - email
  #         description: email acces
  #         required: true
  #       - in: body
  #         name:
  #           - password
  #         description: password acces
  #         required: true
  #     responses:
  #       201:
  #         description: response
  #       500:
  #         description: response
  /api/auth/signup:
    post:
      summary: Register a new user prodil and send a verification email
      description: The first profil registered in the system is the `User` role.
      tags:
        - Authentification
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Mr"
                firstName:
                  type: string
                  example: "Jason"
                lastName:
                  type: string
                  example: "Watmore"
                email:
                  type: string
                  example: "jason@example.com"
                password:
                  type: string
                  example: "pass123"
                confirmPassword:
                  type: string
                  example: "pass123"
                acceptTerms:
                  type: boolean
              required:
                - title
                - firstName
                - lastName
                - email
                - password
                - confirmPassword
                - acceptTerms
      responses:
        "200":
          description: The registration request was successful and a verification email has been sent to the specified email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registration successful, please check your email for verification instructions"

  /api/auth/login:
    post:
      description: Welcome back in Groupomania
      summary: login in user account
      tags:
        - Authentification
      parameters:
        - in: body
          name:
            - email
          description: email acces
          required: true
        - in: body
          name:
            - password
          description: password acces
          required: true
      responses:
        200:
          description: response
        500:
          description: response
  /api/profil/:id:
    get:
      description: get you're profil
      summary: get you're profil
      tags:
        - Profil
      response:
        200:
        description: response
    put:
      summary: Update you're profil
      description: The`Users`can update their profil.
      tags:
        - Profil
      operationId: update profil
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Mr"
                firstName:
                  type: string
                  example: "Jason"
                lastName:
                  type: string
                  example: "Watmore"
                email:
                  type: string
                  example: "jason@example.com"
                password:
                  type: string
                  example: "pass123"
                confirmPassword:
                  type: string
                  example: "pass123"
      responses:
        "200":
          description: Profil updated successfully. The details of the updated profil are returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "5eb12e197e06a76ccdefc121"
                  title:
                    type: string
                    example: "Mr"
                  firstName:
                    type: string
                    example: "Jason"
                  lastName:
                    type: string
                    example: "Watmore"
                  email:
                    type: string
                    example: "jason@example.com"
                  created:
                    type: string
                    example: "2020-05-05T09:12:57.848Z"
                  updated:
                    type: string
                    example: "2020-05-08T03:11:21.553Z"
    delete:
      summary: Delete you're profil
      description: The `User`can delete their own profil.
      tags:
        - Profil
      operationId: deleteAccount
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Account deleted successfully"

  /api/posts:
    get:
      description: get all post
      summary: get all post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "My new MacBook"
                text:
                  type: string
                  example: "La puce M1 confère au MacBook Pro une vitesse et une puissance vertigineuses. "
                img:
                  type: string
                  example: "Url img"
                like:
                  type: number
                  example: 2
                dislike:
                  type: number
                  example: 1
      response:
        200:
        description: response

    post:
      description: create a post
      summary: create post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "My new MacBook 13 pouce "
                text:
                  type: string
                  example: "La puce M1 confère au MacBook Pro une vitesse et une puissance vertigineuses. "
                img:
                  type: string
                  example: "Url img"
        response:
          201:
          description: response

  /api/posts/:id:
    put:
      description: update a post
      summary: update your post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "My new MacBook 16 pouce"
                text:
                  type: string
                  example: "La puce M1 confère au MacBook Pro une vitesse et une puissance vertigineuses."
                img:
                  type: string
                  example: "Url img"
        response:
          200:
          description: response
    delete:
      description: delete a post
      summary: delete your post
      tags:
        - Posts
      parameters:
        - in: body
          name:
            - post
      response:
        200:
        description: response

  /api/comments:
    get:
      description: get all comment
      summary: get all comment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                like:
                  type: number
                  example: 25
                dislike:
                  type: number
                  example: 3
      response:
        200:
        description: response
  /api/comment/id:
    get:
      description: get one comment
      summary: get one comment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                like:
                  type: number
                  example: 25
                dislike:
                  type: number
                  example: 3
      response:
        200:
        description: response
  /api/post/comment/postid:
    post:
      description: post one comment
      summary: post one comment
      tags:
        - Comments
      parameters:
        - in: body
          name:
            - post one comment
      response:
        200:
        description: response
  /api/update/comment/postid:
    put:
      description: update one comment
      summary: update one comment
      tags:
        - Comments
      parameters:
        - in: body
          name:
            - update one comment
      response:
        200:
        description: response
  /api/delete/comment/postid:
    delete:
      description: delete one comment
      summary: delete one comment
      tags:
        - Comments
      parameters:
        - in: body
          name:
            - delete one comment
      response:
        200:
        description: response
  /api/like/postid/userid:
    post:
      description: like one post
      summary: like one post
      tags:
        - Like
      parameters:
        - in: body
          name:
            - like one post
      response:
        200:
        description: response
  /api/dislike/postid/userid:
    delete:
      description: dislike one post
      summary: dislike one post
      tags:
        - Like
      parameters:
        - in: body
          name:
            - dislike one post
      response:
        200:
        description: response
